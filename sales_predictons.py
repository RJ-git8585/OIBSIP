# -*- coding: utf-8 -*-
"""Sales_Predictons.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12aLE5MAjCa7GI4H61yUuwM82lgNyshG2

# **Loading Data**
"""

import pandas as pd
import numpy as np
df=pd.read_csv('/content/Advertising.csv')
df.head(5)

df.columns

"""# **Droping Unnessesory Column**"""

df=df.drop(['Unnamed: 0'],axis=1)

df

"""# **Checking missing value**"""

df.isna().mean()

"""# **Checking Linearity**"""

import seaborn as sns
sns.pairplot(df,hue='Sales')

import matplotlib.pyplot as plt
plt.scatter(df['Newspaper'],df['Sales'])

plt.scatter(df['Radio'],df['Sales'])

plt.scatter(df['TV'],df['Sales'])

"""# **Assigning Input and target value**






"""

x=df.iloc[:,0:3]

y=df.iloc[:,3]
y

from sklearn.preprocessing import OneHotEncoder,StandardScaler,MinMaxScaler
st=StandardScaler()
x=st.fit_transform(x)

"""# **Splitting data into training and testing data**"""

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.25,random_state=2)

"""# **Applying Linear Regression**"""

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(xtrain,ytrain)
y_pred=lr.predict(xtest)

"""# **Calculating Accuracy of Model**"""

from sklearn.metrics import r2_score
print("r2_score is",r2_score(ytest,y_pred))

"""# **Apply Random Forest Regressor**"""

from sklearn.ensemble import RandomForestRegressor
rf=RandomForestRegressor(max_depth=10, random_state=0)
rf.fit(xtrain,ytrain)
ypred=rf.predict(xtest)

"""# **Calculating Accuracy of Model**"""

from sklearn.metrics import r2_score
print("r2_score is",r2_score(ytest,ypred))